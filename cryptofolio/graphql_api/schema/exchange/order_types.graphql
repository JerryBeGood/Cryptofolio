"""
Basic information about result of an order.
"""
type OrderResponse {
  """
  Whether the order was successful or not
  """
  success: Boolean!
  """
  Status of an oder
  """
  status: STATUS
  """
  Error code of unsuccessful order request
  """
  code: Int
  """
  Message describing error code usually regarding limits connected to each pair -> ExchangeInfo
  """
  msg: String
}

"""
Limit order - sell or buy an asset at a specific price or better
"""
input LimitOrder {
  """
  A pair of assets that are trade for one another - base and quote asset
  """
  symbol: String!

  """
  BUY or SELL
  """
  side: SIDE!

  """
  Amount of asset to be sold or bought
  """
  quantity: Float!

  """
  Limit price for which assets will be bought or sold
  """
  price: Float!

  """
  This sets how long an order will be active before expiration
  """
  timeInForce: TIF

  """
  Divides order to specified number of smaller orders that will be executed consecutively.
  If limit order is set to be also an iceberg order the timeInForce must be set to GTC.
  """
  icebergQty: Int
}

"""
Market order - sell or buy an asset immediately
"""
input MarketOrder {
  """
  A pair of assets that are trade for one another - base and quote asset
  """
  symbol: String!

  """
  BUY or SELL
  """
  side: SIDE!

  """
  When base is True, quantity field specifies the amount of base asset(first in a pair) the user wants to buy or sell.
  """
  base: Boolean
  
  quantity: Float!
}

"""
Stop Loss Limit order - sell or buy an asset once the price reaches the specified price known as the stop price
"""
input StopLossLimitOrder {
  """
  A pair of assets that are trade for one another - base and quote asset
  """
  symbol: String!
  """
  BUY or SELL
  """
  side: SIDE!
  """
  Divides order to specified number of smaller orders that will be executed consecutively.
  If limit order is set to be also an iceberg order the timeInForce must be set to GTC.
  """
  icebergQty: Int
  """
  This sets how long an order will be active before expiration
  """
  timeInForce: TIF!
  """
  Amount of asset to be sold or bought
  """
  quantity: Float!
  price: Float!
  """
  The price at which asset will be sold or bought
  """
  stopPrice: Float!
}

enum TIF {
  """
  Good Til Canceled
  An order will be on the book unless the order is canceled.
  """
  GTC
  """
  Immediate Or Cancel
  An order will try to fill the order as much as it can before the order expires.
  """
  IOC
  """
  Fill or Kill
  An order will expire if the full order cannot be filled upon execution.
  """
  FOK
}

enum SIDE {
  BUY
  SELL
}

enum EXCHANGE {
  binance
  bybit
}

"""
Status of an order
"""
enum STATUS {
  """
  The order has been accepted by the engine.
  """
  NEW
  """
  A part of the order has been filled.
  """
  PARTIALLY_FILLED
  """
  The order has been completed.
  """
  FILLED
  """
  The order has been canceled by the user.
  """
  CANCELED
  """
  Currently unused
  """
  PENDING_CANCELED
  """
  The order was not accepted by the engine and not processed.
  """
  REJECTED
  """
  The order was canceled according to the order type's rules
  """
  EXPIRED
}